services:
  proxy:
    image: nginx:latest
    env_file: .env
    ports:
      - 3333:3333
    networks:
      - gcapi_network
    restart: "on-failure"
    volumes:
      - ./nginx.conf.d:/etc/nginx/conf.d
    depends_on:
      - backend

  whoami:
    image: emilevauge/whoami
    env_file: .env
    networks:
      - gcapi_network

  dbadmin:
    image: adminer
    networks:
      - gcapi_network
    restart: "on-failure"
    depends_on:
      - db

  db:
    image: mysql:8
    env_file: .env
    networks:
      - gcapi_network
    restart: "unless-stopped"
    environment:
      - MYSQL_HOST=${DATABASE_SERVER}
      - MYSQL_ROOT_PASSWORD=${DATABASE_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_DB_NAME=${DATABASE_NAME}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ./config/sql/privileges.sql:/docker-entrypoint-initdb.d/1.sql
      - app_db_data:/var/lib/mysql

  backend:
    image: "${DOCKER_IMAGE_PREFIX}/${STACK_NAME}-backend:${TAG-latest}"
    env_file: .env
    ports:
      - 8888:8888
    networks:
      - gcapi_network
    restart: "on-failure"
    volumes:
      - ./backend/app:/app
    depends_on:
      - db
    environment:
      - SERVER_NAME=${API_DOMAIN-localhost}
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}

volumes:
  app_db_data:
    driver: local

networks:
  gcapi_network:
