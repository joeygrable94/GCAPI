version: "3"
services:
  proxy:
    image: traefik:latest
    ports:
      - "81:80"
      - "8090:8080"
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - default
    restart: "always"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/etc/certs:ro
    command:
      - --providers.docker=true
      - --providers.docker.constraints=Label(`traefik.constraint-label`, `${TRAEFIK_CONSTRAINT_TAG?Variable not set}`)
      - --providers.docker.exposedbydefault=false
      # - --providers.docker.swarmmode
      - --accesslog
      - --log
      - --api
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.docker.network=${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - traefik.constraint-label=${TRAEFIK_CONSTRAINT_TAG?Variable not set}
      - traefik.http.routers.${STACK_NAME?Variable not set}-traefik-public.rule=Host(`${DOMAIN?Variable not set}`)
      - traefik.http.services.${STACK_NAME?Variable not set}-traefik-public.loadbalancer.server.port=80
  db:
    platform: linux/x86_64
    image: mysql:latest
    env_file: .env
    ports:
      - "3306:3306"
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - default
    restart: "unless-stopped"
    environment:
      - MYSQL_HOST=${DATABASE_SERVER}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DATABASE_NAME}
      - MYSQL_USER=${DATABASE_USER}
      - MYSQL_PASSWORD=${DATABASE_PASSWORD}
      - MYSQL_DB_NAME=${DATABASE_NAME}
    volumes:
      - ./config/sql/privileges.sql:/docker-entrypoint-initdb.d/1.sql
      - app_db_data:/var/lib/mysql
  cache:
    image: redis
    env_file: .env
    ports:
      - "6379:6379"
    restart: "always"
    volumes:
      - app_cache:/data
  queue:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - app_queue:/var/lib/rabbitmq
  worker:
    image: "${DOCKER_IMAGE_PREFIX}/worker:${TAG-latest}"
    env_file: .env
    restart: "on-failure"
    depends_on:
      - db
      - cache
      - queue
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}
      - SMTP_HOST=${SMTP_HOST?Variable not set}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    volumes:
      - ./backend/app:/app
    build:
      context: ./backend
      dockerfile: worker.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
  backend:
    image: '${DOCKER_IMAGE_PREFIX}/backend:${TAG-latest}'
    env_file: .env
    ports:
      - "8888:8888"
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - default
    restart: "on-failure"
    depends_on:
      - db
      - cache
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}
      - SMTP_HOST=${SMTP_HOST}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    volumes:
      - ./backend/app:/app
    build:
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    labels:
      - traefik.enable=true
      - traefik.constraint-label=${TRAEFIK_CONSTRAINT_TAG?Variable not set}
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
      - traefik.http.services.${STACK_NAME?Variable not set}-backend.loadbalancer.server.port=80
  frontend:
    image: '${DOCKER_IMAGE_PREFIX}/frontend:${TAG-latest}'
    env_file: .env
    networks:
      - ${TRAEFIK_PUBLIC_NETWORK?Variable not set}
      - default
    depends_on:
      - backend
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
      args:
        FRONTEND_ENV: ${FRONTEND_ENV-development}
    labels:
      - traefik.enable=true
      - traefik.constraint-label=${TRAEFIK_CONSTRAINT_TAG?Variable not set}
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.rule=PathPrefix(`/`)
      - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=80
volumes:
  app_db_data:
    driver: local
  app_cache:
    driver: local
  app_queue:
    driver: local
  app_task_data:
    driver: local
networks:
  traefik-public:
    external: ${TRAEFIK_PUBLIC_NETWORK_IS_EXTERNAL-false}
